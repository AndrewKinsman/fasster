% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{as_tibble.fasster}
\alias{as_tibble.fasster}
\title{Coerce lists and matrices to data frames.}
\usage{
\method{as_tibble}{fasster}(x, ...)
}
\arguments{
\item{x}{A list. Each element of the list must have the same length.}

\item{...}{Other arguments passed on to individual methods.}
}
\description{
\code{\link[=as.data.frame]{as.data.frame()}} is effectively a thin wrapper around \code{data.frame},
and hence is rather slow (because it calls \code{\link[=data.frame]{data.frame()}} on each element
before \link{cbind}ing together). \code{as_tibble} is a new S3 generic
with more efficient methods for matrices and data frames.
}
\details{
This is an S3 generic. tibble includes methods for data frames (adds tbl_df
classes), tibbles (returns unchanged input), lists, matrices, and tables.
Other types are first coerced via \code{as.data.frame()} with
\code{stringsAsFactors = FALSE}.

\code{as_data_frame} and \code{as.tibble} are aliases.
}
\examples{
l <- list(x = 1:500, y = runif(500), z = 500:1)
df <- as_tibble(l)

m <- matrix(rnorm(50), ncol = 5)
colnames(m) <- c("a", "b", "c", "d", "e")
df <- as_tibble(m)

# as_tibble is considerably simpler than as.data.frame
# making it more suitable for use when you have things that are
# lists
\dontrun{
if (requireNamespace("microbenchmark", quiet = TRUE)) {
  l2 <- replicate(26, sample(letters), simplify = FALSE)
  names(l2) <- letters
  microbenchmark::microbenchmark(
    as_tibble(l2, validate = FALSE),
    as_tibble(l2),
    as.data.frame(l2)
  )
}

if (requireNamespace("microbenchmark", quiet = TRUE)) {
  m <- matrix(runif(26 * 100), ncol = 26)
  colnames(m) <- letters
  microbenchmark::microbenchmark(
    as_tibble(m),
    as.data.frame(m)
  )
}
}
}
